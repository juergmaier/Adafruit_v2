<VisualMicro>
  <Program Name="Adafruit_v2" Ext=".ino" Location="D:\Projekte\InMoov\MotorizedBase\Adafruit_v2">
    <Compile IsDebugStart="1" IsGdb="0" CompilerErrors="0" ConfigurationName="Debug" UseConfigurationNameInBuildFolder="True" StopOnError="False" OptimiseLibs="True" OptimiseCore="True" BuildPath="C:\Users\juerg.maier\AppData\Local\Temp\VMBuilds\Adafruit_v2\mega_atmega2560\Debug" ReCompileIfSourceIsNewer="1" SketchName="Adafruit_v2" ReportDigitalPins="0" ReportAnalogPins="0" ReportI2C="0" ReportFreeMemory="0" IncludeDebug="1" LastDebugPreProcessorDefinitions="VM_DEBUG;VM_DEBUG_ENABLE 1;VM_DEBUG_BANDWIDTH_THROTTLE_MS 33;VM_DEBUGGER_TYPE_HARDWARESERIAL 0;VM_DEBUGGER_TYPE_SOFTWARESERIAL 1;VM_DEBUGGER_TYPE_FASTSERIAL 2;VM_DEBUGGER_TYPE_USB 3;VM_DEBUGGER_TYPE_TEENSY 4;VM_DEBUGGER_TYPE_UART 5;VM_DEBUGGER_TYPE_USART 6;VM_DEBUGGER_TYPE_USBSERIAL 7;VM_DEBUGGER_TYPE_TTYUART 8;VM_DEBUGGER_TYPE_NET_CONSOLE 9;VM_DEBUGGER_TYPE_Uart 10;VM_DEBUGGER_TYPE_COSA 11;VM_DEBUGGER_TYPE_CDCSerialClass 12;VM_DEBUGGER_TYPE_HARDWARESERIAL1 13;VM_DEBUGGER_TYPE_HARDWARESERIAL2 14;VM_DEBUGGER_TYPE_HARDWARESERIAL3 15;VM_DEBUGGER_TYPE_NET_UDP 16;VM_DEBUGGER_TYPE VM_DEBUGGER_TYPE_HARDWARESERIAL;VM_DEBUG_BREAKPAUSE;" IncludesDebug="1" IsCompiled="1" />
    <Platform Name="arduino16x" Package="arduino" Platform="avr" Architecture="4.9.2-atmel3.5.3-arduino2">
      <Board Name="mega_atmega2560" Description="Arduino/Genuino Mega w/ ATmega2560 (Mega 2560)" CoreFolder="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\hardware\avr\1.6.17\cores\arduino" VariantFullPath="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\hardware\avr\1.6.17\variants\mega" McuIdePath="C:\Program Files (x86)\Arduino" McuSketchBookPath="C:\Users\juerg.maier\Documents\Arduino" name="Arduino/Genuino Mega w/ ATmega2560 (Mega 2560)" vid.0="0x2341" pid.0="0x0010" vid.1="0x2341" pid.1="0x0042" vid.2="0x2A03" pid.2="0x0010" vid.3="0x2A03" pid.3="0x0042" vid.4="0x2341" pid.4="0x0210" vid.5="0x2341" pid.5="0x0242" upload.tool="avrdude" upload.maximum_data_size="8192" bootloader.tool="avrdude" bootloader.low_fuses="0xFF" bootloader.unlock_bits="0x3F" bootloader.lock_bits="0x0F" build.f_cpu="16000000L" build.core="arduino" build.variant="mega" build.board="AVR_MEGA2560" menu.cpu.atmega2560="ATmega2560 (Mega 2560)" menu.cpu.atmega2560.upload.protocol="wiring" menu.cpu.atmega2560.upload.maximum_size="253952" menu.cpu.atmega2560.upload.speed="115200" menu.cpu.atmega2560.bootloader.high_fuses="0xD8" menu.cpu.atmega2560.bootloader.extended_fuses="0xFD" menu.cpu.atmega2560.bootloader.file="stk500v2/stk500boot_v2_mega2560.hex" menu.cpu.atmega2560.build.mcu="atmega2560" menu.cpu.atmega2560.build.board="AVR_MEGA2560" menu.cpu.atmega1280="ATmega1280" menu.cpu.atmega1280.upload.protocol="arduino" menu.cpu.atmega1280.upload.maximum_size="126976" menu.cpu.atmega1280.upload.speed="57600" menu.cpu.atmega1280.bootloader.high_fuses="0xDA" menu.cpu.atmega1280.bootloader.extended_fuses="0xF5" menu.cpu.atmega1280.bootloader.file="atmega/ATmegaBOOT_168_atmega1280.hex" menu.cpu.atmega1280.build.mcu="atmega1280" menu.cpu.atmega1280.build.board="AVR_MEGA" runtime.ide.path="C:\Program Files (x86)\Arduino" runtime.os="windows" build.system.path="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\hardware\avr\1.6.17\system" runtime.ide.version="106011" target_package="arduino" target_platform="avr" runtime.hardware.path="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\hardware\avr" originalid="mega" intellisense.tools.path="{runtime.tools.avr-gcc.path}\" intellisense.include.paths="{intellisense.tools.path}avr\include\;{intellisense.tools.path}avr\include\avr\;{intellisense.tools.path}lib\gcc\avr\4.8.1\include" tools.atprogram.cmd.path="%AVRSTUDIO_EXE_PATH%\atbackend\atprogram" tools.atprogram.cmd.setwinpath="true" tools.atprogram.program.params.verbose="-v" tools.atprogram.program.params.quiet="-q" tools.atprogram.program.pattern="&quot;{cmd.path}&quot; -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.atprogram.program.xpattern="&quot;{cmd.path}&quot; {AVRSTUDIO_BACKEND_CONNECTION} -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.atprogram.erase.params.verbose="-v" tools.atprogram.erase.params.quiet="-q" tools.atprogram.bootloader.params.verbose="-v" tools.atprogram.bootloader.params.quiet="-q" tools.atprogram.bootloader.pattern="&quot;{cmd.path}&quot; -d {build.mcu} {bootloader.verbose}  program -c -f &quot;{runtime.ide.path}\hardware\arduino\avr\bootloaders\{bootloader.file}&quot;" version="1.6.17" compiler.warning_flags="-w" compiler.warning_flags.none="-w" compiler.warning_flags.default="" compiler.warning_flags.more="-Wall" compiler.warning_flags.all="-Wall -Wextra" compiler.path="{runtime.tools.avr-gcc.path}/bin/" compiler.c.cmd="avr-gcc" compiler.c.flags="-c -g -Os {compiler.warning_flags} -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects" compiler.c.elf.flags="{compiler.warning_flags} -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections" compiler.c.elf.cmd="avr-gcc" compiler.S.flags="-c -g -x assembler-with-cpp -flto -MMD" compiler.cpp.cmd="avr-g++" compiler.cpp.flags="-c -g -Os {compiler.warning_flags} -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -MMD -flto" compiler.ar.cmd="avr-gcc-ar" compiler.ar.flags="rcs" compiler.objcopy.cmd="avr-objcopy" compiler.objcopy.eep.flags="-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0" compiler.elf2hex.flags="-O ihex -R .eeprom" compiler.elf2hex.cmd="avr-objcopy" compiler.ldflags="" compiler.size.cmd="avr-size" build.extra_flags="" compiler.c.extra_flags="" compiler.c.elf.extra_flags="" compiler.S.extra_flags="" compiler.cpp.extra_flags="" compiler.ar.extra_flags="" compiler.objcopy.eep.extra_flags="" compiler.elf2hex.extra_flags="" recipe.c.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.c.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.c.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.cpp.o.pattern="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.S.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.S.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.S.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" archive_file_path="{build.path}/{archive_file}" recipe.ar.pattern="&quot;{compiler.path}{compiler.ar.cmd}&quot; {compiler.ar.flags} {compiler.ar.extra_flags} &quot;{archive_file_path}&quot; &quot;{object_file}&quot;" recipe.c.combine.pattern="&quot;{compiler.path}{compiler.c.elf.cmd}&quot; {compiler.c.elf.flags} -mmcu={build.mcu} {compiler.c.elf.extra_flags} -o &quot;{build.path}/{build.project_name}.elf&quot; {object_files} &quot;{build.path}/{archive_file}&quot; &quot;-L{build.path}&quot; -lm" recipe.objcopy.eep.pattern="&quot;{compiler.path}{compiler.objcopy.cmd}&quot; {compiler.objcopy.eep.flags} {compiler.objcopy.eep.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.eep&quot;" recipe.objcopy.hex.pattern="&quot;{compiler.path}{compiler.elf2hex.cmd}&quot; {compiler.elf2hex.flags} {compiler.elf2hex.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.hex&quot;" recipe.output.tmp_file="{build.project_name}.hex" recipe.output.save_file="{build.project_name}.{build.variant}.hex" recipe.size.pattern="&quot;{compiler.path}{compiler.size.cmd}&quot; -A &quot;{build.path}/{build.project_name}.elf&quot;" recipe.size.regex="^(?:\.text|\.data|\.bootloader)\s+([0-9]+).*" recipe.size.regex.data="^(?:\.data|\.bss|\.noinit)\s+([0-9]+).*" recipe.size.regex.eeprom="^(?:\.eeprom)\s+([0-9]+).*" preproc.includes.flags="-w -x c++ -M -MG -MP" recipe.preproc.includes="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} {preproc.includes.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot;" preproc.macros.flags="-w -x c++ -E -CC" recipe.preproc.macros="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} {preproc.macros.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{preprocessed_file_path}&quot;" tools.avrdude.path="{runtime.tools.avrdude.path}" tools.avrdude.cmd.path="{path}/bin/avrdude" tools.avrdude.config.path="{path}/etc/avrdude.conf" tools.avrdude.network_cmd="{runtime.tools.arduinoOTA.path}/bin/arduinoOTA" tools.avrdude.upload.params.verbose="-v" tools.avrdude.upload.params.quiet="-q -q" tools.avrdude.upload.verify="" tools.avrdude.upload.params.noverify="-V" tools.avrdude.upload.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {upload.verbose} {upload.verify} -p{build.mcu} -c{upload.protocol} -P{serial.port} -b{upload.speed} -D &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude.program.params.verbose="-v" tools.avrdude.program.params.quiet="-q -q" tools.avrdude.program.verify="" tools.avrdude.program.params.noverify="-V" tools.avrdude.program.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {program.verbose} {program.verify} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude.erase.params.verbose="-v" tools.avrdude.erase.params.quiet="-q -q" tools.avrdude.erase.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {erase.verbose} -p{build.mcu} -c{protocol} {program.extra_params} -e -Ulock:w:{bootloader.unlock_bits}:m -Uefuse:w:{bootloader.extended_fuses}:m -Uhfuse:w:{bootloader.high_fuses}:m -Ulfuse:w:{bootloader.low_fuses}:m" tools.avrdude.bootloader.params.verbose="-v" tools.avrdude.bootloader.params.quiet="-q -q" tools.avrdude.bootloader.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {bootloader.verbose} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{runtime.platform.path}/bootloaders/{bootloader.file}:i&quot; -Ulock:w:{bootloader.lock_bits}:m" tools.avrdude_remote.upload.pattern="/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -p{build.mcu}" tools.avrdude.upload.network_pattern="&quot;{network_cmd}&quot; -address {serial.port} -port {upload.network.port} -sketch &quot;{build.path}/{build.project_name}.hex&quot; -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}" build.usb_manufacturer="&quot;Unknown&quot;" build.usb_flags="-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER={build.usb_manufacturer}' '-DUSB_PRODUCT={build.usb_product}'" vm.platform.root.path="C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\kewqb4yj.nka\Micro Platforms\arduino16x" avrisp.name="AVR ISP" avrisp.communication="serial" avrisp.protocol="stk500v1" avrisp.program.protocol="stk500v1" avrisp.program.tool="avrdude" avrisp.program.extra_params="-P{serial.port}" avrispmkii.name="AVRISP mkII" avrispmkii.communication="usb" avrispmkii.protocol="stk500v2" avrispmkii.program.protocol="stk500v2" avrispmkii.program.tool="avrdude" avrispmkii.program.extra_params="-Pusb" usbtinyisp.name="USBtinyISP" usbtinyisp.protocol="usbtiny" usbtinyisp.program.tool="avrdude" usbtinyisp.program.extra_params="" arduinoisp.name="ArduinoISP" arduinoisp.protocol="arduinoisp" arduinoisp.program.tool="avrdude" arduinoisp.program.extra_params="" arduinoisporg.name="ArduinoISP.org" arduinoisporg.protocol="arduinoisporg" arduinoisporg.program.tool="avrdude" arduinoisporg.program.extra_params="" usbasp.name="USBasp" usbasp.communication="usb" usbasp.protocol="usbasp" usbasp.program.protocol="usbasp" usbasp.program.tool="avrdude" usbasp.program.extra_params="-Pusb" parallel.name="Parallel Programmer" parallel.protocol="dapa" parallel.force="true" parallel.program.tool="avrdude" parallel.program.extra_params="-F" arduinoasisp.name="Arduino as ISP" arduinoasisp.communication="serial" arduinoasisp.protocol="stk500v1" arduinoasisp.speed="19200" arduinoasisp.program.protocol="stk500v1" arduinoasisp.program.speed="19200" arduinoasisp.program.tool="avrdude" arduinoasisp.program.extra_params="-P{serial.port} -b{program.speed}" usbGemma.name="Arduino Gemma" usbGemma.protocol="arduinogemma" usbGemma.program.tool="avrdude" usbGemma.program.extra_params="" usbGemma.config.path="{runtime.platform.path}/bootloaders/gemma/avrdude.conf" stk500.name="Atmel STK500 development board" stk500.communication="serial" stk500.protocol="stk500" stk500.program.protocol="stk500" stk500.program.tool="avrdude" stk500.program.extra_params="-P{serial.port}" buspirate.name="BusPirate as ISP" buspirate.communication="serial" buspirate.protocol="buspirate" buspirate.program.protocol="buspirate" buspirate.program.tool="avrdude" buspirate.program.extra_params="-P{serial.port}" runtime.tools.avrdude.path="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\tools\avrdude\6.3.0-arduino8" runtime.tools.avrdude-6.0.1-arduino2.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avr-gcc.path="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\tools\avr-gcc\4.9.2-atmel3.5.3-arduino2" runtime.tools.avr-gcc-4.9.2-atmel3.5.3-arduino.path="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\tools\avr-gcc\4.9.2-atmel3.5.3-arduino2" runtime.tools.avrdude-6.3.0-arduino2.path="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\tools\avrdude\6.3.0-arduino8" runtime.tools.arduinoOTA.path="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\tools\arduinoOTA\1.0.0" runtime.tools.arduinoOTA-1.0.0.path="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\tools\arduinoOTA\1.0.0" runtime.tools.arm-none-eabi-gcc.path="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\tools\arm-none-eabi-gcc\4.8.3-2014q1" runtime.tools.arm-none-eabi-gcc-4.8.3-2014q1.path="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\tools\arm-none-eabi-gcc\4.8.3-2014q1" runtime.tools.bossac.path="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\tools\bossac\1.6.1-arduino" runtime.tools.bossac-1.6.1-arduino.path="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\tools\bossac\1.6.1-arduino" upload.protocol="wiring" upload.maximum_size="253952" upload.speed="115200" bootloader.high_fuses="0xD8" bootloader.extended_fuses="0xFD" bootloader.file="stk500v2/stk500boot_v2_mega2560.hex" build.mcu="atmega2560" runtime.vm.boardinfo.id="mega_atmega2560" runtime.vm.boardinfo.name="mega_atmega2560" runtime.vm.boardinfo.desc="Arduino/Genuino Mega w/ ATmega2560 (Mega 2560)" runtime.vm.boardinfo.src_location="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\hardware\avr\1.6.17" ide.hint="For all platforms that use Board Manager" ide.location.key="Arduino16x" ide.location.ide.winreg="Arduino 1.6.x Application" ide.location.sketchbook.winreg="Arduino 1.6.x Sketchbook" ide.location.sketchbook.preferences="sketchbook.path" ide.default.revision_name="1.8.0" ide.default.version="10800" ide.default.package="arduino" ide.default.platform="avr" ide.multiplatform="true" ide.includes="arduino.h" ide.exe_name="arduino" ide.platformswithoutpackage="false" ide.includes.fallback="wprogram.h" ide.extension="ino" ide.extension.fallback="pde" ide.versionGTEQ="160" ide.exe="arduino.exe" ide.hosts="atmel" ide.url="http://arduino.cc/en/Main/Software" ide.help.reference.path="reference" ide.help.reference.path2="reference\www.arduino.cc\en\Reference" ide.help.reference.serial="reference\www.arduino.cc\en\Serial" vm.debug="true" software="ARDUINO" ssh.user.name="root" ssh.user.default.password="arduino" ssh.host.wwwfiles.path="/www/sd" build.working_directory="{runtime.ide.path}" ide.location.preferences.portable="{runtime.ide.path}\portable" ide.location.preferences="%VM_APPDATA_LOCAL%\arduino15\preferences.txt" ide.location.preferences_fallback="%VM_APPDATA_ROAMING%\arduino15\preferences.txt" ide.location.contributions="%VM_APPDATA_LOCAL%\arduino15" ide.location.contributions_fallback="%VM_APPDATA_ROAMING%\arduino15" ide.contributions.boards.allow="true" ide.contributions.boards.ignore_unless_rewrite_found="true" ide.contributions.libraries.allow="true" ide.contributions.boards.support.urls.wiki="https://github.com/arduino/Arduino/wiki/Unofficial-list-of-3rd-party-boards-support-urls" ide.create_platforms_from_boardsTXT.teensy="build.core" ide.appid="arduino16x" location.sketchbook="C:\Users\juerg.maier\Documents\Arduino" build.core.vmresolved="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\hardware\avr\1.6.17\cores\arduino" build.core.parentfolder.vmresolved="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\hardware\avr\1.6.17\cores" build.core.coresparentfolder.vmresolved="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\hardware\avr\1.6.17" build.core.path="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\hardware\avr\1.6.17\cores\arduino" vm.core.include="arduino.h" vm.boardsource.path="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\hardware\avr\1.6.17" runtime.platform.path="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\hardware\avr\1.6.17" vm.platformname.name="avr" build.arch="AVR" builder.noino="false" build.variant.vmresolved="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\hardware\avr\1.6.17\variants\mega" build.architecture="4.9.2-atmel3.5.3-arduino2" vmresolved.compiler.path="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\tools\avr-gcc\4.9.2-atmel3.5.3-arduino2\bin\" vmresolved.tools.path="C:\Users\juerg.maier\AppData\Local\arduino15\packages\arduino\tools\avr-gcc\4.9.2-atmel3.5.3-arduino2" build.path="C:\Users\juerg.maier\AppData\Local\Temp\VMBuilds\Adafruit_v2\mega_atmega2560\Debug" vm.runtime.compiler.showwarnings="false" vm.runtime.upload.verbose="false" vm.runtime.upload.verify="true" serial.port.file="COM14" serial.port="COM14" serial.port.num="14" serial.port.caption="COM14 - Arduino Mega 2560" serial.Availability="2" serial.Binary="True" serial.Caption="Arduino Mega 2560 (COM14)" serial.ConfigManagerErrorCode="0" serial.ConfigManagerUserConfig="False" serial.CreationClassName="Win32_SerialPort" serial.Description="Arduino Mega 2560" serial.DeviceID="COM14" serial.MaxBaudRate="115200" serial.MaximumInputBufferSize="0" serial.MaximumOutputBufferSize="0" serial.Name="Arduino Mega 2560 (COM14)" serial.OSAutoDiscovered="True" serial.PNPDeviceID="USB\VID_2341&amp;PID_0042\754393336353510140C0" serial.PowerManagementCapabilities.value0="1" serial.PowerManagementSupported="False" serial.ProviderType="Modem Device" serial.SettableBaudRate="True" serial.SettableDataBits="True" serial.SettableFlowControl="True" serial.SettableParity="True" serial.SettableParityCheck="True" serial.SettableRLSD="True" serial.SettableStopBits="True" serial.Status="OK" serial.StatusInfo="3" serial.Supports16BitMode="False" serial.SupportsDTRDSR="True" serial.SupportsElapsedTimeouts="True" serial.SupportsIntTimeouts="True" serial.SupportsParityCheck="True" serial.SupportsRLSD="True" serial.SupportsRTSCTS="False" serial.SupportsSpecialCharacters="False" serial.SupportsXOnXOff="False" serial.SupportsXOnXOffSet="False" serial.SystemCreationClassName="Win32_ComputerSystem" serial.SystemName="PCJM" vm.runtime.compiler.auto_discover_includes="true" vm.runtime.compiler.auto_discover_includes_cache="true" build.vm.build.vmdebug="1" build.vm.build.isgdb="0" build.vm.build.optimised="1" vm.last.buildpath="C:\Users\juerg.maier\AppData\Local\Temp\VMBuilds\Adafruit_v2\mega_atmega2560\Debug" />
    </Platform>
    <Debug EnableBreak="1" DebugEnabled="1" InBreakLiveView="1" PerfStats="1" IsGdb="0" RemotePortSpeedWrittenToDebugSource="115200" />
    <VCCodeModel>
      <VCCodeMacros />
    </VCCodeModel>
    <BreakPoints>
      <BreakPoint Index="1" Name="Adafruit_v2.ino, line 28" Id="84dedee6-edc8-4990-ae14-b18c993f8446" Enabled="1" Message="Loop {loopcount}" MessageTextType="0" PreProcessedMessage="Loop {0}" Condition="" ConditionType="1" CurrentHits="0" File="d:\projekte\inmoov\motorizedbase\adafruit_v2\adafruit_v2.ino" FileLine="28" FileColumn="1" FunctionName="loop()" FunctionLineOffset="5" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='84dedee6-edc8-4990-ae14-b18c993f8446'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>21	
22		// loopcount z�hlt durch die einzelnen Servoschritte
23		loopCount++;
24		loopCount = loopCount%ANZ_MESSUNGEN_PRO_SCAN;
25	
26		followJoystick();
27	
--&gt;28		//delay((1/rate) * 1000);	// ms
29		delay(2000);
30	}
</Source>
        <MessageVariables>
          <MessageVariable Name="loopcount" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="2" Name="Move.cpp, line 119" Id="c356b2c6-bc68-4ac2-8ac1-b786821694d5" Enabled="1" Message="joystick x,y,z {XPos} {YPos} {ZPos}" MessageTextType="0" PreProcessedMessage="joystick x,y,z {0} {1} {2}" Condition="" ConditionType="1" CurrentHits="0" File="d:\projekte\inmoov\motorizedbase\adafruit_v2\move.cpp" FileLine="119" FileColumn="1" FunctionName="followJoystick()" FunctionLineOffset="9" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='c356b2c6-bc68-4ac2-8ac1-b786821694d5'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>112	
113	// den joystick lesen
114	XPos = int((analogRead(joyX) - 517) / 10);
115	YPos = int((analogRead(joyY) - 513) / 10);
116	ZPos = digitalRead(joyZ);
117	
118	// Ruhezone Zenter
--&gt;119	if (abs(XPos) &lt; 10) XPos = 0;
120	if (abs(YPos) &lt; 10) YPos = 0;
121	
122	fahrRichtung = degrees(atan2(XPos, YPos));
123	
124	if (fahrRichtung != oldFahrRichtung) Serial.print("Joystick Richtung degrees "); {
125		oldFahrRichtung = fahrRichtung;
126		Serial.println(fahrRichtung);
127	}
128	
</Source>
        <MessageVariables>
          <MessageVariable Name="XPos" Index="1" />
          <MessageVariable Name="YPos" Index="2" />
          <MessageVariable Name="ZPos" Index="3" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="3" Name="Distance.cpp, line 248" Id="59d1f596-0a9d-4af1-a2ce-8cfdb80536b5" Enabled="1" Message="kleinsteFreiheit {kleinsteFreiheit}" MessageTextType="0" PreProcessedMessage="kleinsteFreiheit {0}" Condition="" ConditionType="1" CurrentHits="0" File="d:\projekte\inmoov\motorizedbase\adafruit_v2\distance.cpp" FileLine="248" FileColumn="1" FunctionName="freieFahrt(MOVEMENT Richtung)" FunctionLineOffset="19" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='59d1f596-0a9d-4af1-a2ce-8cfdb80536b5'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>241			if (messdatenSindAlt) {
242				kleinsteFreiheit = -1;
243			}
244			else {
245				kleinsteFreiheit = min(kleinsteFreiheit, kleinsteDistanz(sensorID));
246				//Serial.print("kleinste Distanz "); Serial.println(kleinsteDistanz(sensorID));
247			}
--&gt;248		}
249	
250		Serial.print("kleinste Freiheit "); Serial.println(kleinsteFreiheit);
251		return kleinsteFreiheit;
252	}
</Source>
        <MessageVariables>
          <MessageVariable Name="kleinsteFreiheit" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="4" Name="Distance.cpp, line 217" Id="3877363b-14f2-4877-a526-90c4f1b4e352" Enabled="1" Message="distanz {sensorDaten[sensorID][loopCount].Distanz}" MessageTextType="0" PreProcessedMessage="distanz {0}" Condition="" ConditionType="1" CurrentHits="0" File="d:\projekte\inmoov\motorizedbase\adafruit_v2\distance.cpp" FileLine="217" FileColumn="1" FunctionName="ermittleDistanzen(MOVEMENT Richtung)" FunctionLineOffset="21" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='3877363b-14f2-4877-a526-90c4f1b4e352'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>210				//sensorDaten[sensorID][loopCount].Distanz = distanz041(sensorDaten[sensorID][loopCount].AnalogWert);
211				sensorDaten[sensorID][loopCount].Distanz = 200;  //a41 liefert keine werte aktuell
212			}
213	
214			if (p_sensor-&gt;sensorTyp == A21) {
215				sensorDaten[sensorID][loopCount].Distanz = distanz021(GP2Y0A21YK, sensorDaten[sensorID][loopCount].AnalogWert);
216			}
--&gt;217	
218			sensorDaten[sensorID][loopCount].letzteMessung = millis();
219	
220			//Serial.print("Distanzsensor "); Serial.print(p_sensor-&gt;sensorName);
221			//Serial.print(" Analogwert: ");  Serial.print(sensorDaten[sensorID][loopCount].AnalogWert);
222			//Serial.print(" Distanz: "); Serial.println(sensorDaten[sensorID][loopCount].Distanz);
223	
224		}
225	}
226	
</Source>
        <MessageVariables>
          <MessageVariable Name="sensorDaten[sensorID][loopCount].Distanz" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="5" Name="Distance.cpp, line 140" Id="8bddeb63-0ca9-4dda-bae9-e39c64a05a6b" Enabled="1" Message="begin neueMessrichtung" MessageTextType="0" PreProcessedMessage="begin neueMessrichtung" Condition="" ConditionType="1" CurrentHits="0" File="d:\projekte\inmoov\motorizedbase\adafruit_v2\distance.cpp" FileLine="140" FileColumn="1" FunctionName="neueMessrichtung(SCAN_SERVOS servoID)" FunctionLineOffset="4" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='8bddeb63-0ca9-4dda-bae9-e39c64a05a6b'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>133	
134	
135	/////////////////////////
136	/////////////////////////
137	void neueMessrichtung(SCAN_SERVOS servoID) {
138	
139		servoDaten[servoID].messrichtung += servoDaten[servoID].delta;
--&gt;140	
141		if (servoDaten[servoID].messrichtung &gt; MessrichtungMax) {
142			servoDaten[servoID].delta = -ScanSchritt;
143		}
144		if (servoDaten[servoID].messrichtung &lt; MessrichtungMin) {
145			servoDaten[servoID].delta = ScanSchritt;
146		}
147	
148		int PWM_Wert = servoDaten[servoID].messrichtung * (2000 / 150) + 1500;
149	
</Source>
      </BreakPoint>
      <BreakPoint Index="6" Name="Move.cpp, line 136" Id="247fa708-eaf6-477b-aff3-57fd0025c41e" Enabled="1" Message="setCartSpeed {cartSpeed}" MessageTextType="0" PreProcessedMessage="setCartSpeed {0}" Condition="" ConditionType="1" CurrentHits="0" File="d:\projekte\inmoov\motorizedbase\adafruit_v2\move.cpp" FileLine="136" FileColumn="1" FunctionName="followJoystick()" FunctionLineOffset="26" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='247fa708-eaf6-477b-aff3-57fd0025c41e'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>129	// benutze den gr�sseren Ausschlag des Joystick als Geschwindigkeit-Vorgabe
130	if (abs(XPos) &gt; abs(YPos)) {
131		cartSpeed = map(abs(XPos), 0, 51, 0, 150);  // reduziere Geschwindigkeit von Seitw�rts-Bewegungen (150 max)
132	}
133	else {
134		cartSpeed = map(abs(YPos), 0, 51, 0, 240);
135	}
--&gt;136	setCartSpeed();
137	
138	if (cartSpeed == 0) stop();
139	
140	else {
141		
142		if (ZPos == 1) {  // Drehung nicht aktiv
143	
144			if (fahrRichtung &gt; -22.5   &amp;&amp; fahrRichtung &lt;= -22.5 + 45)   moveCart(VORWAERTS);
145			if (fahrRichtung &gt; 22.5    &amp;&amp; fahrRichtung &lt;= 22.5 + 45)    moveCart(VOR_DIAG_RECHTS);
</Source>
        <MessageVariables>
          <MessageVariable Name="cartSpeed" Index="1" />
        </MessageVariables>
      </BreakPoint>
    </BreakPoints>
  </Program>
</VisualMicro>